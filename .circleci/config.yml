version: 2.1

orbs:
  aws-cli: circleci/aws-cli@5.1
  aws-ecr: circleci/aws-ecr@9.0

jobs:
  build-and-deploy:
    parameters:
      repository:
        type: string
        default: "glbm-container" # Nombre del repositorio ECR por defecto
      image_tag:
        type: string
        default: "latest" # Tag de la imagen por defecto
      region:
        type: string
        default: "us-east-1" # Regi칩n de AWS por defecto

    docker:
      - image: docker:20.10.24-dind
      # - image: circleci/python:3.9

    steps:
      # # Verificar la identidad del usuario
      # - run:
      #     name: Verificar la identidad del usuario
      #     command: |
      #       export AWS_PAGER=""
      #       aws sts get-caller-identity
      - setup_remote_docker:
          version: 20.10.24
      - run:
          name: Instalar Bash
          command: |
            apk update && apk add bash
      - run:
          name: Verificar Disponibilidad de Bash
          command: |
            if [ -x "$(command -v bash)" ]; then
              echo "Bash est치 disponible"
            else
              echo "Bash no est치 instalado"
              exit 1
            fi
      # Verificar variables de entorno antes del comando del orb
      - run:
          name: Verificar configuraci칩n
          shell: /bin/bash
          command: |
            echo "AWS_ACCOUNT_ID=$AWS_ACCOUNT_ID"
            echo "AWS_REGION=$AWS_REGION"
      - aws-ecr/build_and_push_image:
          auth:
            - aws-cli/setup:
              region: << parameters.region >>
          region: << parameters.region >>
          repo: << parameters.repository >>
          tag: << parameters.image_tag >>


      # # Etiquetar la imagen Docker
      # - run:
      #     name: Etiquetar la imagen Docker
      #     command: |
      #       docker tag << parameters.repository >>:<< parameters.image_tag >> \
      #       $AWS_ACCOUNT_ID.dkr.ecr.<< parameters.region >>.amazonaws.com/<< parameters.repository >>:<< parameters.image_tag >>

      # # Subir la imagen a Amazon ECR
      # - run:
      #     name: Subir la imagen Docker a ECR
      #     command: |
      #       docker push $AWS_ACCOUNT_ID.dkr.ecr.<< parameters.region >>.amazonaws.com/<< parameters.repository >>:<< parameters.image_tag >>

workflows:
  version: 2
  deploy:
    jobs:
      - build-and-deploy:
          # repository: "glbm-container"
          image_tag: "latest"
          filters:
            branches:
              only:
                - main
