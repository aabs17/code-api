version: 2.1

orbs:
  aws-cli: circleci/aws-cli@5.1
  aws-ecs: circleci/aws-ecs@6.0.2

jobs:
  build-and-deploy:
    parameters:
      repository:
        type: string
        default: "glbm-container" # Nombre del repositorio ECR por defecto
      image_tag:
        type: string
        default: "latest" # Tag de la imagen por defecto
      region:
        type: string
        default: "us-east-1" # Región de AWS por defecto
      cluster:
        type: string
        default: "DevGlobalCLuster" # Nombre del cluster ECS por defecto

    docker:
      - image: circleci/python:3.9 
  
    steps:
      - setup_remote_docker:
            docker_layer_caching: true
      - checkout

      # Verificar instalación de Docker
      - run:
          name: Verificar instalación de Docker
          command: docker --version

      - aws-cli/setup:
          region: << parameters.region >>

      # # Verificar la identidad del usuario
      # - run:
      #     name: Verificar la identidad del usuario
      #     command: |
      #       export AWS_PAGER=""
      #       aws sts get-caller-identity

      # Construcción de la imagen Docker
      - run:
          name: Construir la imagen Docker
          command: |
            docker build -t << parameters.repository >>:<< parameters.image_tag >> .

      # Autenticación con Amazon ECR
      - run:
          name: Autenticarse en Amazon ECR
          command: |
            aws ecr get-login-password --region << parameters.region >> | \
            docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.<< parameters.region >>.amazonaws.com

      # Etiquetar la imagen Docker
      - run:
          name: Etiquetar la imagen Docker
          command: |
            docker tag << parameters.repository >>:<< parameters.image_tag >> \
            $AWS_ACCOUNT_ID.dkr.ecr.<< parameters.region >>.amazonaws.com/<< parameters.repository >>:<< parameters.image_tag >>

      # Subir la imagen a Amazon ECR
      - run:
          name: Subir la imagen Docker a ECR
          command: |
            docker push $AWS_ACCOUNT_ID.dkr.ecr.<< parameters.region >>.amazonaws.com/<< parameters.repository >>:<< parameters.image_tag >>

workflows:
  version: 2
  deploy:
    jobs:
      - build-and-deploy:
          # repository: "glbm-container"
          image_tag: "1.0.1"
          filters:
            branches:
              only:
                - main
      - aws-ecs/deploy_service_update:
          auth:
            - aws-cli/setup:
              region: << parameters.region >>
          region: << parameters.region >>
          cluster: << parameters.cluster >>
          family: "globalBank-bm-container"
          requires:
            - build-and-deploy
          filters:
            branches:
              only:
                - main
          service_name: glbm-services-test1
        